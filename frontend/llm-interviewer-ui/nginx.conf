server {
    listen 80;
    server_name localhost; # Or your domain

    # Root directory for static files
    root /usr/share/nginx/html;
    index index.html index.htm;

    # Serve static files directly
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Optional: You might want to proxy API requests if your frontend and backend are served under the same domain
    # This configuration assumes API calls from frontend are made to absolute URLs of backend services
    # or that another reverse proxy (like one in docker-compose) handles routing to backends.
    # If you used relative URLs in VITE_..._SERVICE_URL (e.g., /api/v1/auth), you'd need proxies here:
    #
    # location /api/v1/auth/ {
    #     proxy_pass http://auth_service:8001/api/v1/auth/; # Assuming auth_service is the Docker service name
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }
    #
    # location /api/v1/admin/ {
    #     proxy_pass http://admin_service:8004/api/v1/admin/;
    #     proxy_set_header Host $host;
    #     # ... other headers
    # }
    # ... and so on for other services

    # Standard error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # Optional: Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
}
